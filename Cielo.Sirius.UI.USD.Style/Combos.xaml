<ResourceDictionary  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                     xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                     xmlns:controles="clr-namespace:Cielo.Sirius.Foundation.USD.Controls;assembly=Cielo.Sirius.Foundation.USD"
                     xmlns:converters="clr-namespace:Cielo.Sirius.Foundation.USD.Converters;assembly=Cielo.Sirius.Foundation.USD">

    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    <converters:SelectedItemBoolNotToVisibilityConverter x:Key="SelectedItemBoolNotToVisibilityConverter" />
    
    <!-- Tabulation ComboBox -->

    <Style x:Key="TabulationComboBoxTemplate.ToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="templateRoot" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            Background="{TemplateBinding Background}" 
                            SnapsToDevicePixels="true"
                            CornerRadius="5">
                        <Border x:Name="splitBorder" 
                                HorizontalAlignment="Right" 
                                SnapsToDevicePixels="true"
                                Cursor="Hand"
                                Width="32">
                            <Border.Background>
                                <SolidColorBrush Color="Transparent"/>
                            </Border.Background>
                            <Path x:Name="arrow" Data="M 0,0 L 10,0 5,6 z" 
                                    Fill="{TemplateBinding Foreground}" 
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"/>
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="TabulationComboBoxTemplate" TargetType="{x:Type controles:TabulationComboBox}">
        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
            </Grid.ColumnDefinitions>
            <Border 
                    Margin="0,2,0,0"
                    Grid.ColumnSpan="2"
                    CornerRadius="8,8,0,0"
                    Background="{Binding Background, ElementName=dropDownBorder}" 
                    Visibility="{Binding IsOpen, Converter={StaticResource BooleanToVisibilityConverter}, ElementName=PART_Popup}"/>
            
            <Popup x:Name="PART_Popup" 
                    Grid.ColumnSpan="2"
                    AllowsTransparency="true"  
                    IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                    PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" 
                    Placement="Bottom">

                <Border x:Name="dropDownBorder" 
                        BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
                        Background="{DynamicResource TabulationComboBox.PopupBackground}"
                        MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                        CornerRadius="0,0,5,5"
                        Padding="0,0,0,5">
                    <ScrollViewer x:Name="DropDownScrollViewer" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                        <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                            <Canvas x:Name="canvas" >
                                <Rectangle x:Name="opaqueRect" 
                                        Fill="{Binding Background, ElementName=dropDownBorder}" 
                                        Height="{Binding ActualHeight, ElementName=dropDownBorder}" 
                                        Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                            </Canvas>
                            <ItemsPresenter x:Name="ItemsPresenter"
                                    KeyboardNavigation.DirectionalNavigation="Contained" 
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Grid>
                    </ScrollViewer>
                </Border>
            </Popup>
            <ToggleButton x:Name="toggleButton" 
                    Grid.ColumnSpan="2"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}" 
                    Background="{TemplateBinding Background}" 
                    IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                    Style="{DynamicResource TabulationComboBoxTemplate.ToggleButtonStyle}"/>
            <ContentPresenter x:Name="contentPresenter"
                    ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" 
                    ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" 
                    Content="{TemplateBinding SelectionBoxItem}" 
                    ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                    IsHitTestVisible="false" 
                    Margin="{TemplateBinding Padding}"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            <TextBlock x:Name="WaterMark" 
                       VerticalAlignment="Center" 
                       HorizontalAlignment="Left" Margin="10,0" 
                       Text="{Binding WaterMarkTabulation, RelativeSource={RelativeSource AncestorType={x:Type controles:TabulationComboBox}}}"
                       Visibility="{Binding SelectedItem, RelativeSource={RelativeSource AncestorType={x:Type controles:TabulationComboBox}}, Converter={StaticResource SelectedItemBoolNotToVisibilityConverter}}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="HasItems" Value="false">
                <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
            </Trigger>
            <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
            </Trigger>
            <DataTrigger Binding="{Binding CallState}" Value="TransferenceRequested">
                <Setter TargetName="dropDownBorder" Property="Background" Value="{DynamicResource TransferColor2}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding CallState}" Value="ConferenceRequested">
                <Setter TargetName="dropDownBorder" Property="Background" Value="{DynamicResource ConferenceColor2}"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="TabulationComboBox.ItemContainerStyle" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundLight2}"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="Padding" Value="10,0,0,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="Bd"
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}" 
                                Padding="{TemplateBinding Padding}" 
                                SnapsToDevicePixels="True">
                        <ContentPresenter 
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource TabulationComboBox.SelectedItem.Background}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource TabulationComboBox.MouseOver.ItemBackground}"/>
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding DataContext.CallState, RelativeSource={RelativeSource AncestorType=ComboBox}}" Value="TransferenceRequested"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource TransferColor3}"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding DataContext.CallState, RelativeSource={RelativeSource AncestorType=ComboBox}}" Value="TransferenceRequested"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource TransferColor3}"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding DataContext.CallState, RelativeSource={RelativeSource AncestorType=ComboBox}}" Value="ConferenceRequested"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource ConferenceColor3}"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding DataContext.CallState, RelativeSource={RelativeSource AncestorType=ComboBox}}" Value="ConferenceRequested"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource ConferenceColor3}"/>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type controles:TabulationComboBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="Background" Value="{DynamicResource TabulationComboBox.Background}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource TabulationComboBox.Foreground}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Padding" Value="12,2,5,3"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template" Value="{DynamicResource TabulationComboBoxTemplate}"/>
        <Setter Property="ItemContainerStyle" Value="{DynamicResource TabulationComboBox.ItemContainerStyle}"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding CallState}" Value="TransferenceRequested">
                <Setter Property="Background" Value="{DynamicResource TransferColor}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding CallState}" Value="ConferenceRequested">
                <Setter Property="Background" Value="{DynamicResource ConferenceColor}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding CallState}" Value="InConference">
                <Setter Property="IsEnabled" Value="false"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding CallState}" Value="InTransference">
                <Setter Property="IsEnabled" Value="false"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding CallState}" Value="Inactive">
                <Setter Property="IsEnabled" Value="false"/>
            </DataTrigger>
            <Trigger Property="ItemsSource" Value="{x:Null}">
                <Setter Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" Value="{DynamicResource Disabled.Background}"/>
                <Setter Property="Foreground" Value="{DynamicResource Disabled.Foreground}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Offer Tabulation -->
    <Style x:Key="OfferTabulation.ItemContainerStyle" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Padding" Value="4,1"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="False"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsKeyboardFocused" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="#FFBBD8E4"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="#FFBBD8E4"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True"/>
                                <Condition Property="IsMouseOver" Value="False"/>
                                <Condition Property="IsKeyboardFocused" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="#FFBBD8E4"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="#FFBBD8E4"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="#FFBBD8E4"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="#FFBBD8E4"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True"/>
                                <Condition Property="IsMouseOver" Value="False"/>
                                <Condition Property="IsKeyboardFocused" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="#FFBBD8E4"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="#FFBBD8E4"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="False"/>
                                <Condition Property="IsMouseOver" Value="False"/>
                                <Condition Property="IsKeyboardFocused" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="#FFBBD8E4"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="False"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsKeyboardFocused" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="#FFBBD8E4"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="#FFBBD8E4"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="templateRoot" SnapsToDevicePixels="true" Background="White" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{DynamicResource OfferTabulationBorderBrush}">
                        <Border x:Name="splitBorder" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" SnapsToDevicePixels="true" Margin="0" HorizontalAlignment="Right" BorderThickness="1" BorderBrush="Transparent">
                            <Path x:Name="arrow" VerticalAlignment="Center" Margin="0" HorizontalAlignment="Center" Fill="Black"  Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z"/>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Cursor" Value="Hand"/>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FilterTabulation" TargetType="{x:Type controles:TabulationComboBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="White"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="11"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Padding" Value="6,3,5,3"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="ItemContainerStyle" Value="{DynamicResource OfferTabulation.ItemContainerStyle}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controles:TabulationComboBox}">
                    <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                        </Grid.ColumnDefinitions>
                        <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                            <Border x:Name="dropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                                <ScrollViewer x:Name="DropDownScrollViewer">
                                    <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                        <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                            <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                        </Canvas>
                                        <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </Grid>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                        <ToggleButton x:Name="toggleButton" 
                                      BorderBrush="{TemplateBinding BorderBrush}" 
                                      BorderThickness="{TemplateBinding BorderThickness}" 
                                      Background="{TemplateBinding Background}" 
                                      Grid.ColumnSpan="2" 
                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                      Style="{DynamicResource ComboBoxToggleButton}"/>
                        <ContentPresenter x:Name="contentPresenter" 
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" 
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" 
                                          Content="{TemplateBinding SelectionBoxItem}" 
                                          ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          IsHitTestVisible="false" 
                                          Margin="{TemplateBinding Padding}" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        <TextBlock x:Name="WaterMark" 
                                   VerticalAlignment="Center" 
                                   HorizontalAlignment="Left" 
                                   Margin="5,0" 
                                   Text="{Binding WaterMarkTabulation, RelativeSource={RelativeSource AncestorType={x:Type controles:TabulationComboBox}}}"
                                   Visibility="Collapsed" 
                                   Style="{DynamicResource WaterMarkFilterTabulation}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </MultiTrigger>
                        <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                            <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                            <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                        </Trigger>
                        <Trigger Property="SelectedItem" Value="">
                            <Setter Property="Visibility" TargetName="WaterMark" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="SelectedItem" Value="{x:Null}">
                            <Setter Property="Visibility" TargetName="WaterMark" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- Search Combo -->

    <DataTemplate x:Key="ComboBoxClientDataTemplate">
        <Grid Height="85">
            <Image x:Name="ImgCliente" Source="{DynamicResource ImgContactName}" RenderOptions.BitmapScalingMode="HighQuality" RenderOptions.EdgeMode="Aliased" Width="30" Margin="7,17,0,0" VerticalAlignment="Top" HorizontalAlignment="Left"/>
            <TextBlock Style="{DynamicResource BaseText}" FontSize="11" Text="{Binding Name}" Margin="50,17,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" />
            <TextBlock Style="{DynamicResource DetailText}" Text="{Binding ContactType}" Margin="50,31,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" />
            <TextBlock Style="{DynamicResource DetailText}" Text="{Binding Phone}" Margin="50,50,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" />
            <TextBlock Style="{DynamicResource DetailText}" Text="{Binding Email}" Margin="50,0,0,13" VerticalAlignment="Bottom" HorizontalAlignment="Left" />
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="ComboBoxSelectedClientDataTemplate">
        <Grid x:Name="grd" Height="93">
            <Image x:Name="ImgCliente" Source="{DynamicResource ImgContactBaloon}" RenderOptions.BitmapScalingMode="HighQuality" RenderOptions.EdgeMode="Aliased" Width="36" Margin="2,12,0,0" VerticalAlignment="Top" HorizontalAlignment="Left"/>
            <TextBlock Style="{DynamicResource BaseText}" FontSize="11" Text="{Binding Name}" Margin="48,13,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" />
            <TextBlock Style="{DynamicResource DetailText}" Text="{Binding ContactType}" Margin="48,30,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" />
            <TextBlock Style="{DynamicResource DetailText}" Text="{Binding Phone}" Margin="48,50,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" />
            <TextBlock Style="{DynamicResource DetailText}" Text="{Binding Email}" Margin="48,0,0,20" VerticalAlignment="Bottom" HorizontalAlignment="Left" />
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding Name}" Value="{x:Null}">
                <Setter TargetName="ImgCliente" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Name}" Value="">
                <Setter TargetName="ImgCliente" Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <Style x:Key="SearchComboBox.ItemContainerStyle" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Height" Value="85"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Grid>
                        <Border x:Name="Bd"
                                BorderBrush="{DynamicResource SearchComboBox.SeparadoresBrush}" 
                                BorderThickness="0,1,0,0" 
                                Background="Transparent" 
                                Padding="{TemplateBinding Padding}" 
                                SnapsToDevicePixels="True"/>
                        <ContentPresenter 
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="IsTabStop" Value="False"/>
                            <Setter Property="Height" Value="0"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource SearchComboBox.MouseOver.ItemBackground}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource SearchComboBox.MouseOver.ItemBackground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SearchComboBoxTemplate.ToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="templateRoot" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            Background="{Binding Background, RelativeSource={RelativeSource AncestorType=ComboBox}}" 
                            SnapsToDevicePixels="true">
                        <Grid>
                            <Border x:Name="splitBorder" 
                                HorizontalAlignment="Right" 
                                SnapsToDevicePixels="true"
                                Cursor="Hand"
                                Width="32">
                                <Border.Background>
                                    <SolidColorBrush Color="Transparent"/>
                                </Border.Background>
                                <Path x:Name="arrow" Data="M 0,0 L 10,0 5,6 z" 
                                    Fill="{DynamicResource SearchComboBox.PathsFill}" 
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"/>
                            </Border>
                            <Border HorizontalAlignment="Right" Width="32"
                                        BorderThickness="1,0,0,0"
                                        Margin="0,10"
                                        BorderBrush="{DynamicResource SearchComboBox.SeparadoresBrush}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="arrow" Property="Data" Value="M 0,6 L 10,6 5,0 z"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="SearchComboTemplate" TargetType="{x:Type controles:SearchComboBox}">
        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
            </Grid.ColumnDefinitions>

            <Popup x:Name="PART_Popup" 
                    Grid.ColumnSpan="2"
                    AllowsTransparency="true"  
                    IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                    PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" 
                    Placement="Bottom">
                <Grid Background="{TemplateBinding Background}"
                      MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                    <StackPanel>
                        <Border BorderThickness="0" Height="1" Background="{DynamicResource SearchComboBox.SeparadoresBrush}" />
                        <controles:LabeledTextBox x:Name="PART_SearchTextBox" Height="20" Width="275" Margin="0,4" HorizontalAlignment="Stretch"
                                     WaterMark="Buscar contato por nome"/>
                        <Border BorderThickness="0" Height="1" Background="{DynamicResource SearchComboBox.SeparadoresBrush}" />
                        <ScrollViewer x:Name="DropDownScrollViewer" Padding="0" BorderThickness="0" Margin="0"
                                      Height="{TemplateBinding MaxDropDownHeight}"
                                      Background="{TemplateBinding Background}">
                            <ItemsPresenter x:Name="PART_ItemsPresenter"
                                    KeyboardNavigation.DirectionalNavigation="Contained"  
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ScrollViewer>
                        
                        <Button x:Name="PART_ButtonAdd" Height="30" 
                                    Style="{DynamicResource RectangularButtonStyle}"
                                    Command="{Binding NewContact}"
                                    Content="[+] Criar Novo Contato"/>
                    </StackPanel>

                    <TextBlock x:Name="TxtNoContacts"
                               VerticalAlignment="Top" HorizontalAlignment="Center" TextAlignment="Center" Margin="0,40"
                               Visibility="Collapsed"
                               Style="{DynamicResource BaseText}" FontSize="12"
                               Text="Nenhum contato encontrado" />
                </Grid>
            </Popup>
            <ToggleButton x:Name="toggleButton" 
                    Grid.ColumnSpan="2"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}" 
                    Background="{TemplateBinding Background}" 
                    IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                    Style="{DynamicResource SearchComboBoxTemplate.ToggleButtonStyle}"/>
            <ContentPresenter x:Name="contentPresenter" 
                    ContentTemplate="{DynamicResource ComboBoxSelectedClientDataTemplate}" 
                    ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" 
                    Content="{TemplateBinding SelectionBoxItem}" 
                    ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                    IsHitTestVisible="false" 
                    Margin="{TemplateBinding Padding}"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Items.Count, RelativeSource={RelativeSource Self}}" Value="0">
                <Setter TargetName="TxtNoContacts" Property="Visibility" Value="Visible"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Items.Count, RelativeSource={RelativeSource Self}}" Value="1">
                <Setter TargetName="TxtNoContacts" Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="SearchComboBoxStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="MaxDropDownHeight" Value="256"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Height" Value="93"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="Background" Value="{DynamicResource SearchComboBox.Background}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="IsSynchronizedWithCurrentItem" Value="True"/>
        <Setter Property="Template" Value="{DynamicResource SearchComboTemplate}"/>
        <Setter Property="ItemTemplate" Value="{DynamicResource ComboBoxClientDataTemplate}"/>
        <Setter Property="ItemContainerStyle" Value="{DynamicResource SearchComboBox.ItemContainerStyle}"/>
        <Style.Triggers>
            <Trigger Property="IsDropDownOpen" Value="true">
                <Setter Property="Background" Value="{DynamicResource SearchComboBox.IsOpen.Background}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>