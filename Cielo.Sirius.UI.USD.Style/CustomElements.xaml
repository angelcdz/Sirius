<ResourceDictionary  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					 xmlns:sys="clr-namespace:System;assembly=mscorlib"
					 xmlns:converters="clr-namespace:Cielo.Sirius.Foundation.USD.Converters;assembly=Cielo.Sirius.Foundation.USD"
                     xmlns:controles="clr-namespace:Cielo.Sirius.Foundation.USD.Controls;assembly=Cielo.Sirius.Foundation.USD"
                     xmlns:base="clr-namespace:Cielo.Sirius.Foundation.USD;assembly=Cielo.Sirius.Foundation.USD">

    <converters:MultiplyConverter x:Key="MultiplyConverter"/>

    <!-- Label Help -->

    <Style x:Key="LabelHelpRightStyle" TargetType="Label">
        <Setter Property="Height" Value="15"/>
        <Setter Property="Width" Value="15"/>
        <Setter Property="Background" Value="{DynamicResource Help.BackgroundLight}"/>
        <Setter Property="Foreground" Value="{DynamicResource Help.ForegroundDark}"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="2"/>
        <Setter Property="ToolTipService.HorizontalOffset" Value="-10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Label">
                    <Grid ToolTipService.Placement="Top"
						  ToolTipService.HorizontalOffset="{TemplateBinding ToolTipService.HorizontalOffset}"
						  ToolTipService.ShowDuration="{TemplateBinding ToolTipService.ShowDuration}"                              
						  ToolTipService.InitialShowDelay="{TemplateBinding ToolTipService.InitialShowDelay}"
						  ToolTipService.HasDropShadow="False">
                        <Grid.Background>
                            <SolidColorBrush Color="Transparent"/>
                        </Grid.Background>
                        <Grid.ToolTip>
                            <ToolTip>
                                <ToolTip.Template>
                                    <ControlTemplate TargetType="ToolTip">
                                        <StackPanel>
                                            <Border CornerRadius="5" Background="{DynamicResource Help.BackgroundMouseOver}" Margin="0,0,0,0">
                                                <ContentPresenter Margin="10"/>
                                            </Border>
                                            <Path x:Name="ArrowPath" Data="M 0,0 L 12,0 6,6 z" Fill="{DynamicResource Help.BackgroundMouseOver}" HorizontalAlignment="Left" Margin="12,0,12,4"/>
                                        </StackPanel>
                                    </ControlTemplate>
                                </ToolTip.Template>
                                <ContentPresenter/>
                            </ToolTip>
                        </Grid.ToolTip>
                        <Ellipse Width="15" Height="15" Fill="{TemplateBinding Background}"/>
                        <TextBlock Foreground="{TemplateBinding Foreground}" 
								   FontFamily="{TemplateBinding FontFamily}"
								   FontSize="{TemplateBinding FontSize}"
								   HorizontalAlignment="Center"
								   VerticalAlignment="Center"
								   Text="?"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="{DynamicResource Help.BackgroundMouseOver}"/>
                <Setter Property="Foreground" Value="{DynamicResource Help.ForegroundMouseOver}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="LabelHelpLeftStyle" TargetType="Label" BasedOn="{StaticResource LabelHelpRightStyle}">
        <Setter Property="ToolTipService.HorizontalOffset" Value="25"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Label">
                    <Grid ToolTipService.Placement="Left"
						  ToolTipService.HorizontalOffset="{TemplateBinding ToolTipService.HorizontalOffset}"
						  ToolTipService.ShowDuration="{TemplateBinding ToolTipService.ShowDuration}"                              
						  ToolTipService.InitialShowDelay="0"
						  ToolTipService.HasDropShadow="False">
                        <Grid.Background>
                            <SolidColorBrush Color="Transparent"/>
                        </Grid.Background>
                        <Grid.ToolTip>
                            <ToolTip>
                                <ToolTip.VerticalOffset>
                                    <MultiBinding Converter="{StaticResource MultiplyConverter}">
                                        <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}"/>
                                        <Binding>
                                            <Binding.Source>
                                                <sys:Double>-1</sys:Double>
                                            </Binding.Source>
                                        </Binding>
                                    </MultiBinding>
                                </ToolTip.VerticalOffset>
                                <ToolTip.Template>
                                    <ControlTemplate TargetType="ToolTip">
                                        <StackPanel>
                                            <Border CornerRadius="5" Background="{DynamicResource Help.BackgroundMouseOver}" Margin="0,0,0,0" >
                                                <ContentPresenter Margin="10"/>
                                            </Border>
                                            <Path x:Name="pathArrow" Data="M 0,0 L 12,0 6,6 z" Fill="{DynamicResource Help.BackgroundMouseOver}" HorizontalAlignment="Right" Margin="12,0,12,4"/>
                                        </StackPanel>
                                    </ControlTemplate>
                                </ToolTip.Template>
                                <ContentPresenter/>
                            </ToolTip>
                        </Grid.ToolTip>
                        <Ellipse Width="15" Height="15" Fill="{TemplateBinding Background}"/>
                        <TextBlock Foreground="{TemplateBinding Foreground}" 
									   FontFamily="{TemplateBinding FontFamily}"
									   FontSize="{TemplateBinding FontSize}"
									   HorizontalAlignment="Center"
									   VerticalAlignment="Center"
									   Text="?"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Client info -->

    <Style x:Key="ClientStatusStyle" TargetType="Label">
        <Setter Property="Height" Value="10"/>
        <Setter Property="Width" Value="10"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="2"/>
        <Setter Property="ToolTipService.HorizontalOffset" Value="-8"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Label">
                    <Grid ToolTipService.Placement="Top"
						  ToolTipService.HorizontalOffset="{TemplateBinding ToolTipService.HorizontalOffset}"
						  ToolTipService.ShowDuration="{TemplateBinding ToolTipService.ShowDuration}"                              
						  ToolTipService.InitialShowDelay="{TemplateBinding ToolTipService.InitialShowDelay}"
						  ToolTipService.HasDropShadow="False">
                        <Grid.Background>
                            <SolidColorBrush Color="Transparent"/>
                        </Grid.Background>
                        <Grid.ToolTip>
                            <ToolTip>
                                <ToolTip.Template>
                                    <ControlTemplate TargetType="ToolTip">
                                        <StackPanel>
                                            <Border CornerRadius="5" Background="{DynamicResource MainMenuToolTipBackground}" Margin="0,0,0,0">
                                                <TextBlock Text="{Binding Content, RelativeSource={RelativeSource AncestorType={x:Type Label}}}" Foreground="White" Margin="10" />
                                            </Border>
                                            <Path x:Name="ArrowPath" Data="M 0,0 L 12,0 6,6 z" Fill="{DynamicResource MainMenuToolTipBackground}" HorizontalAlignment="Left" Margin="7,0,12,4"/>
                                        </StackPanel>
                                    </ControlTemplate>
                                </ToolTip.Template>
                                <ContentPresenter/>
                            </ToolTip>
                        </Grid.ToolTip>
                        <Ellipse Width="10" Height="10" Fill="{TemplateBinding Background}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Client.StatusClient}" Value="Transacting">
                <Setter Property="Background" Value="#FF5DBA40" />
                <Setter Property="Content" Value="Transacionando"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Client.StatusClient}" Value="WithoutTransactingThirtyDays">
                <Setter Property="Background" Value="Yellow" />
                <Setter Property="Content" Value="Sem transacionar a 30 dias"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Client.StatusClient}" Value="WithoutTransactingMoreThirtyDays">
                <Setter Property="Background" Value="#FFEF514D" />
                <Setter Property="Content" Value="Sem transacionar a 180 dias"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ImgClientIVRStatus" TargetType="Image">
        <Setter Property="Height" Value="13"/>
        <Setter Property="Width" Value="13"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Client.ClientIVRAuthenticated}" Value="false">
                <Setter Property="Source" Value="{DynamicResource ImgRedKey}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Client.ClientIVRAuthenticated}" Value="true">
                <Setter Property="Source" Value="{DynamicResource ImgGreenKey}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ClientIVRStatus" TargetType="Label">
        <Setter Property="Height" Value="13"/>
        <Setter Property="Width" Value="13"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="2"/>
        <Setter Property="ToolTipService.HorizontalOffset" Value="-8"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Label">
                    <Grid ToolTipService.Placement="Top"
						  ToolTipService.HorizontalOffset="{TemplateBinding ToolTipService.HorizontalOffset}"
						  ToolTipService.ShowDuration="{TemplateBinding ToolTipService.ShowDuration}"                              
						  ToolTipService.InitialShowDelay="{TemplateBinding ToolTipService.InitialShowDelay}"
						  ToolTipService.HasDropShadow="False">
                        <Grid.Background>
                            <SolidColorBrush Color="Transparent"/>
                        </Grid.Background>
                        <Grid.ToolTip>
                            <ToolTip>
                                <ToolTip.Template>
                                    <ControlTemplate TargetType="ToolTip">
                                        <StackPanel>
                                            <Border CornerRadius="5" Background="{DynamicResource MainMenuToolTipBackground}" Margin="0,0,0,0">
                                                <TextBlock Text="{Binding Content, RelativeSource={RelativeSource AncestorType={x:Type Label}}}" Foreground="White" Margin="10" />
                                            </Border>
                                            <Path x:Name="ArrowPath" Data="M 0,0 L 12,0 6,6 z" Fill="{DynamicResource MainMenuToolTipBackground}" HorizontalAlignment="Left" Margin="7,0,12,4"/>
                                        </StackPanel>
                                    </ControlTemplate>
                                </ToolTip.Template>
                                <ContentPresenter/>
                            </ToolTip>
                        </Grid.ToolTip>
                        <Image x:Name="imgIVRStatus" Style="{DynamicResource ImgClientIVRStatus}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Client.ClientIVRAuthenticated}" Value="false">
                <Setter Property="Content" Value="Cliente não autenticado"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Client.ClientIVRAuthenticated}" Value="true">
                <Setter Property="Content" Value="Cliente autenticado"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ImgClientWarningStatus" TargetType="Image">
        <Setter Property="Height" Value="13"/>
        <Setter Property="Width" Value="13"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Client.ClientWarningStatus}" Value="yellow">
                <Setter Property="Source" Value="{DynamicResource ImgYellowFlag}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Client.ClientWarningStatus}" Value="red">
                <Setter Property="Source" Value="{DynamicResource ImgRedFlag}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ClientWarningStatus" TargetType="Label">
        <Setter Property="Height" Value="13"/>
        <Setter Property="Width" Value="13"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="2"/>
        <Setter Property="ToolTipService.HorizontalOffset" Value="-8"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Label">
                    <Grid ToolTipService.Placement="Top"
						  ToolTipService.HorizontalOffset="{TemplateBinding ToolTipService.HorizontalOffset}"
						  ToolTipService.ShowDuration="{TemplateBinding ToolTipService.ShowDuration}"                              
						  ToolTipService.InitialShowDelay="{TemplateBinding ToolTipService.InitialShowDelay}"
						  ToolTipService.HasDropShadow="False">
                        <Grid.Background>
                            <SolidColorBrush Color="Transparent"/>
                        </Grid.Background>
                        <Grid.ToolTip>
                            <ToolTip>
                                <ToolTip.Template>
                                    <ControlTemplate TargetType="ToolTip">
                                        <StackPanel>
                                            <Border CornerRadius="5" Background="{DynamicResource MainMenuToolTipBackground}" Margin="0,0,0,0">
                                                <TextBlock Text="{Binding Content, RelativeSource={RelativeSource AncestorType={x:Type Label}}}" Foreground="White" Margin="10" />
                                            </Border>
                                            <Path x:Name="ArrowPath" Data="M 0,0 L 12,0 6,6 z" Fill="{DynamicResource MainMenuToolTipBackground}" HorizontalAlignment="Left" Margin="7,0,12,4"/>
                                        </StackPanel>
                                    </ControlTemplate>
                                </ToolTip.Template>
                                <ContentPresenter/>
                            </ToolTip>
                        </Grid.ToolTip>
                        <Image x:Name="imgIVRStatus" Style="{DynamicResource ImgClientWarningStatus}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Client.ClientWarningStatus}" Value="yellow">
                <Setter Property="Content" Value="Alerta Amarelo"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Client.ClientWarningStatus}" Value="red">
                <Setter Property="Content" Value="Alerta Vermelho"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CieloMark" TargetType="{x:Type Border}">
        <Setter Property="BorderBrush" Value="{DynamicResource CieloSealBackground}" />
        <Setter Property="Background" Value="{DynamicResource CieloSealBackground}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="5" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Height" Value="25" />
        <Setter Property="Width" Value="85" />
    </Style>

    <!-- Breadcrumb -->

    <Style x:Key="BreadcrumbHyperlinkStyle" TargetType="Hyperlink">
        <Setter Property="Foreground" Value="{DynamicResource Breadcrumb.Foreground}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource TabItemMainMenuBackground}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="TextBlock.TextDecorations" Value="{x:Null}" />
                <Setter Property="Foreground" Value="{DynamicResource Breadcrumb.DisabledForeground}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Popup Window -->

    <Style x:Key="PopupWindow" TargetType="Window">
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="AllowsTransparency" Value="True"/>
        <Setter Property="ResizeMode" Value="NoResize"/>
        <Setter Property="ShowInTaskbar" Value="False"/>
        <Setter Property="Width" Value="{Binding Owner.ActualWidth, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="Height" Value="{Binding Owner.ActualHeight, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Window">
                    <Grid>
                        <!--<Grid.Style>
                            <Style TargetType="Grid">
                                <Style.Triggers>
                                    <EventTrigger RoutedEvent="Loaded">
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.2"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>-->
                        <Border BorderThickness="0" Opacity="0.7" Background="{DynamicResource BackgroundColorFrame}"/>
                        <ContentPresenter/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


   <!-- Products and Services -->

    <Style x:Key="DataGridHyperlinkStyle" TargetType="Hyperlink">
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="11"/>
        <Setter Property="FontWeight" Value="Regular"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="TextBlock.TextDecorations" Value="{x:Null}" />
                <Setter Property="Foreground" Value="{DynamicResource Breadcrumb.DisabledForeground}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource ProductsServices.HasRequestMouseOver}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DataGridHyperlinkWithRequestStyle" TargetType="Hyperlink" BasedOn="{StaticResource DataGridHyperlinkStyle}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding HasRequest}" Value="true">
                <Setter Property="Foreground" Value="{DynamicResource ProductsServices.HasRequestForeground}"/>
                <Setter Property="FontWeight" Value="Bold"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- ViewBase -->

    <Style x:Key="ViewBaseControlStyle" TargetType="base:ViewBaseControl">
        <Setter Property="ViewState" Value="{Binding ViewState}"/>
        <Setter Property="ErrorMessage" Value="{Binding ErrorMessage}"/>
        <Setter Property="LoadCommand" Value="{Binding LoadCommand}"/>
        <Setter Property="ErrorId" Value="{Binding ErrorId}"/>
        <Setter Property="CustomErrorContentTemplate" Value="{DynamicResource DefaultCustomErrorContentTemplate}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="base:ViewBaseControl">
                    <controles:BusyControl Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"
                                           ViewState="{TemplateBinding ViewState}"
                                           ErrorMessage="{TemplateBinding ErrorMessage}" 
                                           ReloadCommand="{TemplateBinding LoadCommand}"
                                           CustomErrorContent="{TemplateBinding CustomErrorContent}"
                                           CustomErrorContentTemplate="{TemplateBinding CustomErrorContentTemplate}"
                                           ErrorId="{TemplateBinding ErrorId}"
                                           FocusVisualStyle="{x:Null}">
                        <ContentPresenter/>
                    </controles:BusyControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>